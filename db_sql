-- Tabla para Corrales
CREATE TABLE Corrales (
    Id_corral INT PRIMARY KEY AUTO_INCREMENT,
    corral VARCHAR(50) NOT NULL
);

-- Tabla para Alimentos
CREATE TABLE Alimentos (
    id_alimento INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(50) NOT NULL,
    cantidad INT NOT NULL,
    total INT NOT NULL DEFAULT 0;
);


-- Tabla para Medicamentos
CREATE TABLE Medicamentos (
    id_medicamento INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(50) NOT NULL,
    cantidad INT NOT NULL
);

-- Tabla para Fases
CREATE TABLE Fases (
    id_fase INT PRIMARY KEY AUTO_INCREMENT,
    fase VARCHAR(50) NOT NULL,
    id_alimento INT NOT NULL,
    FOREIGN KEY (id_alimento) REFERENCES Alimentos(id_alimento)
);

-- Tabla para Dieta
CREATE TABLE DetalleDieta (
    id_detalle int PRIMARY KEY AUTO_INCREMENT,
    id_fase int NOT NULL,
    CantidadRequerida decimal(10,2) NOT NULL,
    FOREIGN KEY (id_fase) REFERENCES Fases(id_fase),
);

-- Tabla para Animales
CREATE TABLE Animales (
    arete INT PRIMARY KEY AUTO_INCREMENT,
    Id_corral INT,
    FOREIGN KEY (Id_corral) REFERENCES Corrales(Id_corral)
);

-- Tabla para Compra de Alimentos
CREATE TABLE CompraAlim (
    id_compralim INT PRIMARY KEY AUTO_INCREMENT,
    id_alimento INT NOT NULL,
    cantidadcompra INT NOT NULL,
    preciouni DECIMAL(10,2) NOT NULL,
    preciototal DECIMAL(10,2) GENERATED ALWAYS AS (cantidadcompra * preciouni) STORED,
    fecha_compra DATE NOT NULL,
    FOREIGN KEY (id_alimento) REFERENCES Alimentos(id_alimento)
);

-- Tabla para Compra de Medicamentos
CREATE TABLE CompraMedi (
    id_compramedi INT PRIMARY KEY AUTO_INCREMENT,
    id_medicamento INT NOT NULL,
    cantidadcompra INT NOT NULL,
    preciouni DECIMAL(10,2) NOT NULL,
    preciototal DECIMAL(10,2) GENERATED ALWAYS AS (cantidadcompra * preciouni) STORED,
    fecha_compra DATE NOT NULL,
    FOREIGN KEY (id_medicamento) REFERENCES Medicamentos(id_medicamento)
);

-- Tabla para Camadas
CREATE TABLE Camadas (
    id_camada INT PRIMARY KEY AUTO_INCREMENT,
    arete INT NOT NULL,
    id_corral INT NOT NULL,
    cantidad INT NOT NULL,
    fechanaci DATE NOT NULL,
    FOREIGN KEY (id_corral) REFERENCES Corrales(Id_corral)
    FOREIGN KEY (arete) REFERENCES Animales(arete)
);

-- Tabla para Venta de Camadas
CREATE TABLE VentaCam (
    id_venta INT PRIMARY KEY AUTO_INCREMENT,
    id_camada INT NOT NULL,
    preciodes DECIMAL(10,2) NOT NULL,
    cantidad INT,  -- Cantidad de la camada al momento de la venta
    preciototal DECIMAL(10,2) GENERATED ALWAYS AS (preciodes * cantidad) STORED,
    FOREIGN KEY (id_camada) REFERENCES Camadas(id_camada)
);

-- TRIGGERS

--COMPRA DE ALIMENTOS Y SE AÑADA A TABLA DE ALIMENTOS
DELIMITER $$
CREATE TRIGGER actualizar_cantidad_alimento 
AFTER INSERT ON CompraAlim
FOR EACH ROW
BEGIN
    UPDATE Alimentos
    SET cantidad = cantidad + NEW.cantidadcompra
    WHERE id_alimento = NEW.id_alimento;
END$$

DELIMITER ;


--COMPRA DE MEDICAMENTOS Y SE AÑADA A TABLA DE ALIMENTOS
DELIMITER $$
CREATE TRIGGER actualizar_cantidad_medicamento
AFTER INSERT ON CompraMedi
FOR EACH ROW
BEGIN
    UPDATE Medicamentos
    SET cantidad = cantidad + NEW.cantidadcompra
    WHERE id_medicamento = NEW.id_medicamento;
END$$

DELIMITER ;

DELIMITER //

CREATE TRIGGER calcular_total
BEFORE INSERT ON Alimentos
FOR EACH ROW
BEGIN
    SET NEW.total = NEW.cantidad * 20;
END;
//

CREATE TRIGGER actualizar_total
BEFORE UPDATE ON Alimentos
FOR EACH ROW
BEGIN
    SET NEW.total = NEW.cantidad * 20;
END;
//

DELIMITER ;


/////////////
CREATE TABLE DetalleDieta (
    id_detalle int PRIMARY KEY AUTO_INCREMENT,
    id_fase int NOT NULL,
    CantidadRequerida decimal(10,2) NOT NULL,
    FOREIGN KEY (id_fase) REFERENCES Fases(id_fase),
);

CREATE TABLE Ventas (
    id_venta INT AUTO_INCREMENT PRIMARY KEY,
    id_camada INT NOT NULL,
    fechaventa DATE NOT NULL,
    dias_totales INT NOT NULL,
    costo_iniciacion DECIMAL(10, 2) NOT NULL,
    costo_premium DECIMAL(10, 2) NOT NULL,
    gastos_extras DECIMAL(10, 2) DEFAULT 0,
    total DECIMAL(10, 2) NOT NULL
);



